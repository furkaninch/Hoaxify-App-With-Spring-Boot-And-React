[{"/Users/furkaninc/my-app/src/index.js":"1","/Users/furkaninc/my-app/src/reportWebVitals.js":"2","/Users/furkaninc/my-app/src/pages/userSignupPage.js":"3","/Users/furkaninc/my-app/src/api/apiCalls.js":"4","/Users/furkaninc/my-app/src/components/Input.js":"5","/Users/furkaninc/my-app/src/i18n.js":"6","/Users/furkaninc/my-app/src/pages/loginPage.js":"7","/Users/furkaninc/my-app/src/components/LanguageSelector.js":"8","/Users/furkaninc/my-app/src/components/Button.js":"9","/Users/furkaninc/my-app/src/shared/ApiProgress.js":"10","/Users/furkaninc/my-app/src/container/App.js":"11","/Users/furkaninc/my-app/src/pages/homePage.js":"12","/Users/furkaninc/my-app/src/pages/userPage.js":"13","/Users/furkaninc/my-app/src/components/TopBar.js":"14","/Users/furkaninc/my-app/src/components/ProfileCard.js":"15","/Users/furkaninc/my-app/src/shared/AuthenticationContext.js":"16","/Users/furkaninc/my-app/src/redux/configureStore.js":"17","/Users/furkaninc/my-app/src/redux/authReducer.js":"18","/Users/furkaninc/my-app/src/redux/authActions.js":"19","/Users/furkaninc/my-app/src/redux/Constants.js":"20","/Users/furkaninc/my-app/src/components/UserList.js":"21","/Users/furkaninc/my-app/src/components/UserListItem.js":"22","/Users/furkaninc/my-app/src/components/ProfileImageWithDefault.js":"23","/Users/furkaninc/my-app/src/components/Spinner.js":"24","/Users/furkaninc/my-app/src/components/HoaxSubmit.js":"25","/Users/furkaninc/my-app/src/components/HoaxFeed.js":"26","/Users/furkaninc/my-app/src/components/HoaxView.js":"27","/Users/furkaninc/my-app/src/components/HoaxImage.js":"28","/Users/furkaninc/my-app/src/components/Modal.js":"29"},{"size":764,"mtime":1613552289643,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1612000639859,"results":"32","hashOfConfig":"31"},{"size":2881,"mtime":1613913277002,"results":"33","hashOfConfig":"31"},{"size":2071,"mtime":1615115276796,"results":"34","hashOfConfig":"31"},{"size":680,"mtime":1614162798246,"results":"35","hashOfConfig":"31"},{"size":4247,"mtime":1614881698195,"results":"36","hashOfConfig":"31"},{"size":2079,"mtime":1615296870173,"results":"37","hashOfConfig":"31"},{"size":757,"mtime":1613576154965,"results":"38","hashOfConfig":"31"},{"size":415,"mtime":1613913181150,"results":"39","hashOfConfig":"31"},{"size":1645,"mtime":1614419370923,"results":"40","hashOfConfig":"31"},{"size":1188,"mtime":1613576319055,"results":"41","hashOfConfig":"31"},{"size":763,"mtime":1614267732903,"results":"42","hashOfConfig":"31"},{"size":1939,"mtime":1614419871573,"results":"43","hashOfConfig":"31"},{"size":4241,"mtime":1614246658520,"results":"44","hashOfConfig":"31"},{"size":7122,"mtime":1615068949908,"results":"45","hashOfConfig":"31"},{"size":929,"mtime":1613552241988,"results":"46","hashOfConfig":"31"},{"size":1188,"mtime":1613739881181,"results":"47","hashOfConfig":"31"},{"size":710,"mtime":1614245417494,"results":"48","hashOfConfig":"31"},{"size":1059,"mtime":1615115000802,"results":"49","hashOfConfig":"31"},{"size":141,"mtime":1614245203407,"results":"50","hashOfConfig":"31"},{"size":2035,"mtime":1614175573341,"results":"51","hashOfConfig":"31"},{"size":585,"mtime":1614246681461,"results":"52","hashOfConfig":"31"},{"size":784,"mtime":1614615423168,"results":"53","hashOfConfig":"31"},{"size":294,"mtime":1613848761102,"results":"54","hashOfConfig":"31"},{"size":4071,"mtime":1614605930027,"results":"55","hashOfConfig":"31"},{"size":4472,"mtime":1614857550811,"results":"56","hashOfConfig":"31"},{"size":3143,"mtime":1614881647112,"results":"57","hashOfConfig":"31"},{"size":615,"mtime":1614593990316,"results":"58","hashOfConfig":"31"},{"size":1117,"mtime":1614881736469,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"8hhqw1",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/Users/furkaninc/my-app/src/index.js",[],["125","126"],"/Users/furkaninc/my-app/src/reportWebVitals.js",[],"/Users/furkaninc/my-app/src/pages/userSignupPage.js",[],"/Users/furkaninc/my-app/src/api/apiCalls.js",[],"/Users/furkaninc/my-app/src/components/Input.js",[],"/Users/furkaninc/my-app/src/i18n.js",[],"/Users/furkaninc/my-app/src/pages/loginPage.js",[],"/Users/furkaninc/my-app/src/components/LanguageSelector.js",[],"/Users/furkaninc/my-app/src/components/Button.js",[],"/Users/furkaninc/my-app/src/shared/ApiProgress.js",[],"/Users/furkaninc/my-app/src/container/App.js",[],"/Users/furkaninc/my-app/src/pages/homePage.js",[],"/Users/furkaninc/my-app/src/pages/userPage.js",["127"],"import React, { useEffect, useState } from 'react';\nimport ProfileCard from '../components/ProfileCard';\nimport {getUser} from '../api/apiCalls';\nimport { useTranslation } from 'react-i18next';\nimport {useApiProgress} from '../shared/ApiProgress';\nimport Spinner from  '../components/Spinner';\nimport HoaxFeed from '../components/HoaxFeed';\nimport { useParams } from 'react-router-dom';\n\nconst UserPage = (props) => {\n\n    const[user,setUser] = useState({});\n    const[notFound ,setNotFound] = useState(false);\n\n    const{t} = useTranslation();\n    const {username} = useParams();\n\n    const pendingApiCall = useApiProgress('get','/api/1.0/users/' + username,true);\n\n   \n\n    useEffect(()=>{\n        setNotFound(false);\n    },[user]);\n\n    const loadUser = async () => {\n        try{\n            const response = await getUser(username);\n            setUser(response.data);\n        }\n        catch(error){\n            setNotFound(true);\n        }\n    }\n    useEffect(() => {\n        loadUser();\n    },[username]);\n\n    if(pendingApiCall){\n       return(\n            <Spinner/>\n       );\n    }\n\n    \n\n    if(notFound){\n        return (\n            <div className= \"container\">\n            <div className=\"alert alert-danger text-center\" \n            role=\"alert\">\n                <div>\n                    <span class=\"material-icons\" style={{fontSize:'48px'}}>\n                        error\n                    </span> \n                </div>\n                {t('User not found')}  \n            </div>\n            </div>\n            \n        )\n    }\n\n    if(pendingApiCall || user.username !== username){\n        return(\n            <Spinner/>\n       );\n    }\n\n    return (\n        <div className=\"container\"> \n            <div className=\"row\">\n                <div className=\"col\"><ProfileCard user={user}/></div>\n                <div className=\"col\"><HoaxFeed/></div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserPage;","/Users/furkaninc/my-app/src/components/TopBar.js",[],"/Users/furkaninc/my-app/src/components/ProfileCard.js",[],"/Users/furkaninc/my-app/src/shared/AuthenticationContext.js",[],"/Users/furkaninc/my-app/src/redux/configureStore.js",[],"/Users/furkaninc/my-app/src/redux/authReducer.js",["128"],"import { act } from 'react-dom/test-utils';\nimport * as ACTIONS from './Constants';\n\nconst defaultState = {\n    isLoggedIn: false,\n    username: undefined,\n    displayName: undefined,\n    image: undefined,\n    password: undefined\n}\n\n\nconst authReducer = (state = {...defaultState},action) => {\n    if(action.type === ACTIONS.LOGOUT_SUCCESS){\n      return defaultState;\n    }\n    else if(action.type === ACTIONS.LOGIN_SUCCESS ){\n        return{\n            ...action.payload,\n            isLoggedIn:true\n        }\n    }\n    else if (action.type === ACTIONS.UPDATE_SUCCESS){\n        return{\n            ...state,\n            ...action.payload\n        }\n    }\n    return state;\n  };\n\n  export default authReducer;","/Users/furkaninc/my-app/src/redux/authActions.js",[],"/Users/furkaninc/my-app/src/redux/Constants.js",[],"/Users/furkaninc/my-app/src/components/UserList.js",[],"/Users/furkaninc/my-app/src/components/UserListItem.js",[],"/Users/furkaninc/my-app/src/components/ProfileImageWithDefault.js",[],"/Users/furkaninc/my-app/src/components/Spinner.js",[],"/Users/furkaninc/my-app/src/components/HoaxSubmit.js",["129"],"import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { postHoax, postHoaxAttachment } from '../api/apiCalls';\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport {useApiProgress} from '../shared/ApiProgress';\nimport Button from './Button';\nimport Input from './Input';\nimport HoaxImage from './HoaxImage';\n\nconst HoaxSubmit = () => {\n\n    const [focused, setFocused] = useState(false);\n    const [hoax,setHoax] = useState('');\n    const [errors , setErrors] = useState({});\n    const [hoaxImage , setHoaxImage] = useState();\n    const [attachmentId, setAttachmentId] = useState();\n\n    const isPendingApi = useApiProgress(\"post\" , \"/api/1.0/hoaxes\",true);\n    const pendingFileUpload = useApiProgress(\"post\",\"/api/1.0/hoax-attachments\",true);\n\n    let rows = 1;\n\n    if(focused){\n        rows = 3;\n    }\n    \n    useEffect(() => {\n        if(!focused){\n            setHoax('');\n            setErrors({});\n            setHoaxImage();\n            setAttachmentId(undefined);\n        }\n    },[focused])\n\n\n    const {image} = useSelector((store) =>({\n            image: store.image\n    }));\n\n    useEffect(() => {\n        setErrors({});\n    },[hoax])\n\n    const onClickHoaxify = async() => {\n        const body = {\n            content: hoax,\n            attachmentId: attachmentId\n        }\n        try{\n            const response = await postHoax(body);\n            setFocused(false);\n        }catch(error){\n            if(error.response.data.validationErrors){\n                setErrors(error.response.data.validationErrors)\n            }\n        }\n        \n    }\n\n    const onChangeFile = event => {\n        if(event.target.files.length < 1){\n            return;\n        }\n        const file = event.target.files[0];\n        const fileReader = new FileReader();\n        fileReader.onloadend = () => {\n            setHoaxImage(fileReader.result);\n            uploadFile(file);\n        };\n        fileReader.readAsDataURL(file);\n    };\n\n\n    const uploadFile = async (file) => {\n        const attachment = new FormData();\n        attachment.append('image',file);\n        try{\n           const response = await postHoaxAttachment(attachment);\n           setAttachmentId(response.data.id);\n        }catch(error){\n\n        }\n    }\n\n    const {t} = useTranslation();\n    \n    \n    let textAreaClass = 'form-control';\n    if(errors.content){\n        textAreaClass += ' is-invalid';\n    }\n\n    return (\n        <div className=\"card p-1 flex-row\">\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\"/>\n            <div className=\"flex-fill ml-3\">\n                <textarea value = {hoax} className={textAreaClass} onFocus={() => {\n                    setFocused(true);\n                }} onChange={(event) => {\n                    setHoax(event.target.value);\n                }} rows={rows}/>\n                <div className=\"invalid-feedback\">\n                        {errors.content}\n                    </div>\n                {focused && \n                <>\n                {!hoaxImage && <Input type=\"file\" onChange={onChangeFile}/>}\n                {hoaxImage &&  <HoaxImage image={hoaxImage} uploading={pendingFileUpload}/>}\n                <div className=\"d-flex justify-content-between mt-1\">\n\n                 <Button className = \"btn btn-primary\" onClick={onClickHoaxify} text=\"Hoaxify\" disabled={isPendingApi || pendingFileUpload} spinner={isPendingApi}/>\n                  <Button className = \"btn btn-light d-inline-flex\" onClick = {() =>{setFocused(false)}} text={\n                      <>\n                       <span className=\"material-icons\">\n                       close\n                        </span>\n                        {t('Cancel')}\n                    </>\n                    } \n                      disabled={pendingFileUpload || isPendingApi} spinner={isPendingApi}/>\n                 </div> \n                 </>}\n            </div>\n            \n            \n        </div>\n    );\n};\n\nexport default HoaxSubmit;","/Users/furkaninc/my-app/src/components/HoaxFeed.js",["130"],"import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getHoaxes, getNewHoaxCount, getNewHoaxes, getOldHoaxes } from '../api/apiCalls';\nimport HoaxView from './HoaxView';\nimport {useApiProgress} from '../shared/ApiProgress';\nimport Spinner from './Spinner';\nimport { useParams } from 'react-router-dom';\n\nconst HoaxFeed = () => {\n\n    const [hoaxPage , setHoaxPage] = useState({content:[] , last : true , number: 0});\n\n    const {t} = useTranslation();\n\n    const {username} = useParams();\n\n    const [newHoaxCount, setNewHoaxCount] = useState(0);\n\n    let lastHoaxId = 0;\n    let firstHoaxId = 0;\n\n    if(hoaxPage.content.length >1){\n        firstHoaxId = hoaxPage.content[0].id;\n    }\n\n    if(hoaxPage.content.length >0){\n        const lastHoaxIndex = hoaxPage.content.length - 1 ;\n        lastHoaxId = hoaxPage.content[lastHoaxIndex].id;\n    }\n\n    const pathInitial = username ? `/api/1.0/users/${username}/hoaxes` : `/api/1.0/hoaxes?page=`;\n    const initialHoaxLoadProgress = useApiProgress(\"get\",pathInitial);\n\n    const pathOldHoaxes = username ? `/api/1.0/users/${username}/hoaxes/${lastHoaxId}` : `/api/1.0/hoaxes/${lastHoaxId}`;\n    const loadOldHoaxesProgress = useApiProgress('get',pathOldHoaxes,true);\n\n    const pathNewHoaxes = username ? `/api/1.0/users/${username}/hoaxes/${firstHoaxId}?direction=after`: `/api/1.0/hoaxes/${firstHoaxId}?direction=after`;\n    const loadNewHoaxesProgress = useApiProgress('get',pathNewHoaxes,true);\n\n    useEffect(() =>{\n        const getCount = async () => {\n               const response = await getNewHoaxCount(firstHoaxId,username);\n               setNewHoaxCount(response.data.count);\n        }\n        let looper = setInterval(() => {\n            getCount();\n        },5000);\n        return function cleanup(){\n            clearInterval(looper);\n        }\n    },[firstHoaxId])\n\n\n\n    const loadOldHoaxes = async () =>{\n        try{\n           const response = await getOldHoaxes(lastHoaxId,username);\n           setHoaxPage((previousHoaxPage) => ({\n               ...response.data,\n               content: [...previousHoaxPage.content,...response.data.content]\n           }));\n        }catch(error){\n\n        }\n    }\n\n    const loadNewHoaxes = async () => {\n        try{\n            const response = await getNewHoaxes(firstHoaxId,username);\n            setHoaxPage((previousHoaxPage) => ({\n                ...previousHoaxPage,\n                content: [...response.data,...previousHoaxPage.content]\n            }));\n            setNewHoaxCount(0);\n        }catch(error){\n\n        }\n    }\n\n    const onDeleteHoaxSuccess = id => {\n        setHoaxPage((previousHoaxPage) => ({\n            ...previousHoaxPage,\n            content: [...previousHoaxPage.content.filter(hoax => {\n                if(hoax.id !== id){\n                    return true;\n                }\n                return false;\n            })]\n        }));\n    }\n    useEffect(() => {\n        const loadHoaxes = async (page) => {\n            try{\n                const response = await getHoaxes(page ,username);\n                setHoaxPage((previousHoaxPage) => ({\n                    ...response.data,\n                    content: [...previousHoaxPage.content,...response.data.content]\n                }));\n            }catch(error){\n    \n            }\n        }\n        loadHoaxes();\n    },[username]);\n\n    \n    \n    const {content, last } = hoaxPage;\n    if(content.length === 0){\n        return <div className=\"alert alert-secondary text-center\">{initialHoaxLoadProgress ? <Spinner/> : t('There are no hoaxes')}</div>\n    }\n    return (\n        <div>\n            {newHoaxCount > 0 && \n                <div onClick={loadNewHoaxesProgress ? () => {} : () => loadNewHoaxes()} style={{cursor: loadNewHoaxesProgress ? 'not-allowed': 'pointer'}}\n                className=\"alert alert-primary mb-1 text-center\">\n                    {loadNewHoaxesProgress ? <Spinner/> : t('See new hoaxes')} </div>}\n            {content.map(hoax => {\n                return <HoaxView key={hoax.id} hoax ={hoax} onDeleteHoax={onDeleteHoaxSuccess}/>\n            })}\n            {!last && <div onClick={loadOldHoaxesProgress ? () => {} : () => loadOldHoaxes()} style={{cursor: loadOldHoaxesProgress ? 'not-allowed' : 'pointer'}} className=\"alert alert-primary text-center mt-2\">\n                {loadOldHoaxesProgress ? <Spinner /> : t('See more Hoaxes')} </div> }\n        </div>\n    );\n\n };\n\nexport default HoaxFeed;\n\n","/Users/furkaninc/my-app/src/components/HoaxView.js",["131"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport {format} from 'timeago.js'\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { deleteHoax } from '../api/apiCalls';\nimport Modal from './Modal';\nimport { useApiProgress } from '../shared/ApiProgress';\nconst HoaxView = (props) => {\n\n    const loggedInUser =  useSelector(store => store.username);\n    const {hoax , onDeleteHoax} = props;\n    const {user,content,timestamp,fileAttachment,id} = hoax;\n    const{username,displayName,image} = user;\n    const [visibility,setVisibility] = useState(false);\n    \n    const pendingApiCall = useApiProgress('delete','/api/1.0/hoaxes');\n\n    const ownedByLoggedInUser = loggedInUser === username;\n    \n\n    const {i18n , t} = useTranslation();\n\n    const formatted= format(timestamp,i18n.language);\n\n    const onClickDelete = () => {\n            setVisibility(true);\n    }\n\n    const onClickCancel = () => {\n        setVisibility(false);\n    }\n\n    const onClickDeleteSubmit = async() => {\n        await deleteHoax(id);\n        onDeleteHoax(id);\n        setVisibility(false)\n    }\n\n    return (\n            <>\n        <div className = \"card p-1 shadow\">\n            <div className=\"d-flex\">\n                <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"m-2\"/>\n                    <div className=\"pl-2 flex-fill m-auto\"> \n                    <Link to={`user/${username}`} className=\"text-dark\">\n                    <h6 className=\"d-inline\">{displayName} @ {username} </h6>\n                    <span>-</span>\n                    <span>{formatted}</span>\n                    </Link>\n                 </div> \n                 {ownedByLoggedInUser && <button onClick={onClickDelete}\n                  className=\"btn btn-delete-link btn-sm\">\n                    <span className=\"material-icons\">\n                        delete_outline\n                    </span>\n                </button>}\n            </div>\n            <div className=\"pl-2\">\n                {content}\n                \n            </div>\n          {fileAttachment && (\n              <div className = \"pl-2 m-4\">\n                  {fileAttachment.fileType.startsWith('image') &&\n                  <img className = \"img-fluid\" src={`images/attachments/${fileAttachment.name}`}></img> }\n              {!fileAttachment.fileType.startsWith('image') &&\n                <strong className=\"text-danger\">{t('Hoax has unsupported attachment!')}</strong>\n              }\n              </div> \n          )}\n        </div>\n            <Modal visible={visibility} title = {t('Delete Hoax')} message={\n            <div>\n                <div> \n                    <strong>{t('Are you sure you want to delete this Hoax? You can not undo this action!')}</strong>\n                </div>\n                <span>{content}</span>\n             </div>\n             }\n            onClickCancel={onClickCancel} onClickSubmit={onClickDeleteSubmit}\n            pendingApiCall={pendingApiCall}/>\n        </>\n    );\n};\n\nexport default HoaxView;","/Users/furkaninc/my-app/src/components/HoaxImage.js",[],"/Users/furkaninc/my-app/src/components/Modal.js",[],["132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":37,"column":7,"nodeType":"140","endLine":37,"endColumn":17,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":52,"column":19,"nodeType":"144","messageId":"145","endLine":52,"endColumn":27},{"ruleId":"138","severity":1,"message":"147","line":51,"column":7,"nodeType":"140","endLine":51,"endColumn":20,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":67,"column":19,"nodeType":"151","endLine":67,"endColumn":98},{"ruleId":"134","replacedBy":"152"},{"ruleId":"136","replacedBy":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["156"],"no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["154"],["155"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [loadUser, username]",{"range":"162","text":"163"},"Update the dependencies array to be: [firstHoaxId, username]",{"range":"164","text":"165"},[1001,1011],"[loadUser, username]",[1871,1884],"[firstHoaxId, username]"]